openapi: 3.0.0
info:
  description: API for tracking job applications
  version: "1.0.0"
  title: Job Application API
  contact:
    email: jlaw53@my.bcit.ca
tags:
  - name: jobs
    description: Job-related calls
  - name: user
    description: User-related calls
paths:
  /api/register:
    post:
      tags:
        - user
      summary: register user
      operationId: app.register_user
      responses:
        '201':
          description: user is registered
        '400':
          description: bad input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User
  /api/login:
    post:
      tags:
        - user
      summary: log user in
      operationId: app.login
      description: Authenticate user login
      responses:
        '201':
          description: user is logged in
        '401':
          description: The username and/or password are incorrect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User
  /api/delete_user:
    post:
      tags:
        - user
      summary: delete user
      operationId: app.delete_user
      description: Delete user
      responses:
        '200':
          description: user is deleted
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                TEST_PASSWORD:
                  type: string
  /jobs:
    get:
      tags:
        - jobs
      summary: returns jobs
      operationId: app.get_jobs
      responses:
        '200':
          description: get jobs matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'
        '400':
          description: bad input
    post:
      tags:
        - jobs
      summary: adds a job
      operationId: app.add_job
      description: Adds a job in the database
      responses:
        '201':
          description: job created
        '400':
          description: 'invalid input, job invalid'
        '401':
          description: unauthorized access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
        description: Inventory item to add
    put:
      tags:
        - jobs
      summary: update a job
      operationId: app.update_job
      description: Updates a job in the database
      responses:
        '200':
          description: job updated
        '400':
          description: 'invalid input, job invalid'
        '401':
          description: unauthorized access
  /api/jobs/{job_id}:
    delete:
      tags:
        - jobs
      summary: delete a job
      operationId: app.delete_job
      description: Delete a job in the database
      parameters:
        - in: path
          name: job_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: job deleted
        '401':
          description: unauthorized access
  /:
    get:
      summary: Display root page
      description: Displays index.html page
      operationId: app.index
      responses:
        '200':
          description: loaded index html page

components:
  schemas:
    JobApplication:
      type: object
      required:
        - job_title
        - job_description
        - company
        - salary
        - link
        - result
        - notes
      properties:
        job_title:
          type: string
          example: DevOps Engineer
        job_description:
          type: string
          example: "Collaborate with the development team on design and implementation of infrastructure automation.
          Build and maintain CI/CD pipelines and development processes to improve development efficiency.
          Proactively resolve production issues before they surface and cause disruption.
          Mentor other members of the team and influence DevOps best practices."
        company:
          type: string
          example: Ready
        salary:
          type: number
          example: 75000
        link:
          type: string
          example: "https://ca.indeed.com/viewjob?jk=72ecc72e70c9da2f&tk=1fmkbhgocu566800&from=serp&vjs=3"
        post_date:
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        applied_date:
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        result:
          format: string
          enum: [ not applied, applied, interview, waiting, rejected ]
        notes:
          format: string
    User:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
